{% set NAME_PREFIX = properties["deploy_env"] + env['name'] %}

resources:
- type: compute.v1.instanceTemplate
  name: {{ NAME_PREFIX }}-instance-template
  properties:
    properties:
      zone: {{ properties['zone'] }}
      machineType: f1-micro
      metadata:
        items:
        - key: startup-script
          value: |
            #!/bin/bash
            exec &>> /var/log/bootstrap_details.log
            apt-get install -y ansible wget unzip
            wget https://github.com/bigg74/ighestates/archive/master.zip --output-document=/tmp/ighestates.zip
            unzip /tmp/ighestates.zip -d /tmp
            export ANSIBLE_CALLBACK_WHITELIST=profile_tasks
            ansible-playbook /tmp/ighestates-master/gcp/config/ighestates-config-playbook.yaml -vvv
      scheduling:
        preemptible: true
      disks:
      - deviceName: boot
        type: PERSISTENT
        boot: true
        autoDelete: true
        initializeParams:
          diskName: {{ NAME_PREFIX }}-disk
          sourceImage: https://www.googleapis.com/compute/v1/projects/debian-cloud/global/images/family/debian-10
      networkInterfaces:
      - network: https://www.googleapis.com/compute/v1/projects/{{ env["project"] }}/global/networks/default
        accessConfigs:
        - name: External NAT
          type: ONE_TO_ONE_NAT

- type: compute.v1.instanceGroupManager
  name: {{ NAME_PREFIX }}-instance-group
  properties:
    baseInstanceName: {{ NAME_PREFIX }}-vm
    instanceTemplate: $(ref.{{ NAME_PREFIX }}-instance-template.selfLink)
    targetSize: 1
    zone: {{ properties['zone'] }}
    region: us-central1
    autoHealingPolicy:
      - healthCheck: $(ref.{{ NAME_PREFIX }}-health-check.selfLink)
        initialDelaySec: 300
    namedPorts:
      - name: httpport
        port: {{ properties["port"] }}


- name: {{ NAME_PREFIX }}-health-check
  type: compute.v1.healthCheck
  properties:
    checkIntervalSec: 10
    timeoutSec: 5
    healthyThreshold: 2
    unhealthyThreshold: 3
    type: HTTP
    httpHealthCheck:
      portName: httpport

- name: {{ NAME_PREFIX }}-backend-service
  type: compute.v1.backendService
  properties:
    port: {{ properties["port"] }}
    protocol: HTTP
    portName: httpport
    loadBalancingScheme: EXTERNAL
    backends:
      - group: $(ref.{{ NAME_PREFIX }}-instance-group.instanceGroup)
    healthChecks: [ $(ref.{{ NAME_PREFIX }}-health-check.selfLink) ]

- name: {{ NAME_PREFIX }}-urlmap
  type: compute.v1.urlMap
  properties:
    defaultService: $(ref.{{ NAME_PREFIX }}-backend-service.selfLink)

- name: {{ NAME_PREFIX }}-https-proxy
  type: compute.v1.targetHttpProxy
  properties:
    urlMap: $(ref.{{ NAME_PREFIX }}-urlmap.selfLink)

- name: {{ NAME_PREFIX }}-https-proxy
  type: compute.v1.targetHttpsProxy
  properties:
    sslCertificates:
      - $(ref.{{ NAME_PREFIX }}-ssl-cert.selfLink)
    urlMap: $(ref.{{ NAME_PREFIX }}-urlmap.selfLink)

- name: {{ NAME_PREFIX }}-ssl-cert
  type: compute.v1.sslCertificate
  properties:
    type: MANAGED
    managed:
      domains:
        - ighestates.com

- name: {{ NAME_PREFIX }}-elb-ip
  type: compute.v1.globalAddress

- name: {{ NAME_PREFIX }}-forwarding-rule
  type: compute.v1.globalForwardingRule
  properties:
    IPAddress: $(ref.{{ NAME_PREFIX }}-elb-ip.selfLink)
    IPProtocol: TCP
    loadBalancingScheme: EXTERNAL
    portRange: 443
    target: $(ref.{{ NAME_PREFIX }}-https-proxy.selfLink)
